{% extends "problem.j2" %}

{% block vars %}
m = {{ m }}
n = {{ n }}
np.random.seed({{ seed }})

A = np.random.rand(m, n)

y = (np.random.rand(n) - 0.5)
x_hat = -np.select([y < 0], [y])
Lambda = np.select([y >= 0], [y]) # x_hat^T Lambda = 0

mu = np.random.rand(m)
c = Lambda - A.T.dot(mu)
b = A.dot(x_hat)
x = cp.Variable(n)
{% endblock %}

{% block problem %}
objective = cp.Minimize(c*x)
constraints = [A*x == b, x >= 0]

prob = cp.Problem(objective, constraints)
{% endblock %}
