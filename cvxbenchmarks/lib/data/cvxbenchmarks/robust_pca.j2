{% extends "utils/problem.j2" %}

{% block vars %}
import scipy.sparse as sps

np.random.seed({{ seed }})
n = {{ n }}
r = {{ r }}
density = {{ density }}

L1 = np.random.randn(n,r)
L2 = np.random.randn(r,n)
L0 = L1.dot(L2)

S0 = sps.rand(n, n, density)
S0.data = 10*np.random.randn(len(S0.data))
M = L0 + S0
lam = 0.1
{% endblock %}

{% block problem %}
L = cp.Variable(n, n)
S = cp.Variable(n, n)
f = cp.norm(L, "nuc") + lam*cp.norm1(S)
C = [L + S == M]

prob = cp.Problem(cp.Minimize(f), C)
{% endblock %}