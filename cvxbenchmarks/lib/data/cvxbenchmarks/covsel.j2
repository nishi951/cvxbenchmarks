{% extends "problem.j2" %}

{% block vars %}
np.random.seed({{ seed }})

m = {{ m }}
n = {{ n }}
lam = float({{ lam }})

import scipy.sparse as sps

A = sps.rand(n,n, 0.01)
A = np.asarray(A.T.dot(A).todense() + 0.1*np.eye(n))
L = np.linalg.cholesky(np.linalg.inv(A))
X = np.random.randn(m,n).dot(L.T)
S = X.T.dot(X)/m
W = np.ones((n,n)) - np.eye(n)

Theta = cp.Variable(n,n)
{% endblock %}

{% block problem %}
prob = cp.Problem(cp.Minimize(
        lam*cp.norm1(cp.mul_elemwise(W,Theta)) +
        cp.sum_entries(cp.mul_elemwise(S,Theta)) -
        cp.log_det(Theta)))
{% endblock %}