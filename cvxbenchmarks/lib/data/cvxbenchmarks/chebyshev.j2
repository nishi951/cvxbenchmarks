{% extends "utils/problem.j2" %}    
{% import "utils/helpers.j2" as helpers %}

{% block vars %}
{{ helpers.normalized_data_matrix() }}

np.random.seed({{ seed }})
m = {{ m }}
n = {{ n }}
k = {{ k }}
A = [normalized_data_matrix(m,n,1) for i in range(k)]
B = normalized_data_matrix(k,n,1)
c = np.random.rand(k)
{% endblock %}

{% block problem %}
x = cp.Variable(n)
obj_list = [cp.pnorm(A[i]*x, 2) + cp.abs(B[i,:]*x - c[i]) for i in range(k)]
f = cp.max_elemwise(obj_list)

prob = cp.Problem(cp.Minimize(f))
{% endblock %}